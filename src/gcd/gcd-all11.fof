fof(id1,axiom,! [Xx4] : ~ ('0' = s(Xx4))).
fof(id2,axiom,~ ('0' = nil)).
fof(id3,axiom,! [Xx5,Xx6] : ~ ('0' = cons(Xx5,Xx6))).
fof(id4,axiom,! [Xx7] : ! [Xx8] : (s(Xx7) = s(Xx8) => Xx7 = Xx8)).
fof(id5,axiom,! [Xx9] : ~ (nil = s(Xx9))).
fof(id6,axiom,! [Xx10] : ! [Xx11,Xx12] : ~ (s(Xx10) = cons(Xx11,Xx12))).
fof(id7,axiom,! [Xx13,Xx14] : ~ (nil = cons(Xx13,Xx14))).
fof(id8,axiom,! [Xx15,Xx16] : ! [Xx17,Xx18] : (cons(Xx15,Xx16) = cons(Xx17,Xx18) => Xx16 = Xx18)).
fof(id9,axiom,! [Xx19,Xx20] : ! [Xx21,Xx22] : (cons(Xx19,Xx20) = cons(Xx21,Xx22) => Xx19 = Xx21)).
fof(id10,axiom,gr('0')).
fof(id11,axiom,! [Xx23] : (gr(Xx23) <=> gr(s(Xx23)))).
fof(id12,axiom,gr(nil)).
fof(id13,axiom,! [Xx24,Xx25] : ((gr(Xx24) & gr(Xx25)) <=> gr(cons(Xx24,Xx25)))).
fof(id14,axiom,! [Xx26] : ~ ((nat_list_succeeds(Xx26) & nat_list_fails(Xx26)))).
fof(id15,axiom,! [Xx26] : (nat_list_terminates(Xx26) => (nat_list_succeeds(Xx26) | nat_list_fails(Xx26)))).
fof(id16,axiom,! [Xx27,Xx28,Xx29] : ~ ((times_succeeds(Xx27,Xx28,Xx29) & times_fails(Xx27,Xx28,Xx29)))).
fof(id17,axiom,! [Xx27,Xx28,Xx29] : (times_terminates(Xx27,Xx28,Xx29) => (times_succeeds(Xx27,Xx28,Xx29) | times_fails(Xx27,Xx28,Xx29)))).
fof(id18,axiom,! [Xx30,Xx31,Xx32] : ~ ((plus_succeeds(Xx30,Xx31,Xx32) & plus_fails(Xx30,Xx31,Xx32)))).
fof(id19,axiom,! [Xx30,Xx31,Xx32] : (plus_terminates(Xx30,Xx31,Xx32) => (plus_succeeds(Xx30,Xx31,Xx32) | plus_fails(Xx30,Xx31,Xx32)))).
fof(id20,axiom,! [Xx33,Xx34] : ~ (('@=<_succeeds'(Xx33,Xx34) & '@=<_fails'(Xx33,Xx34)))).
fof(id21,axiom,! [Xx33,Xx34] : ('@=<_terminates'(Xx33,Xx34) => ('@=<_succeeds'(Xx33,Xx34) | '@=<_fails'(Xx33,Xx34)))).
fof(id22,axiom,! [Xx35,Xx36] : ~ (('@<_succeeds'(Xx35,Xx36) & '@<_fails'(Xx35,Xx36)))).
fof(id23,axiom,! [Xx35,Xx36] : ('@<_terminates'(Xx35,Xx36) => ('@<_succeeds'(Xx35,Xx36) | '@<_fails'(Xx35,Xx36)))).
fof(id24,axiom,! [Xx37] : ~ ((nat_succeeds(Xx37) & nat_fails(Xx37)))).
fof(id25,axiom,! [Xx37] : (nat_terminates(Xx37) => (nat_succeeds(Xx37) | nat_fails(Xx37)))).
fof(id26,axiom,! [Xx38,Xx39,Xx40] : ~ ((gcd_leq_succeeds(Xx38,Xx39,Xx40) & gcd_leq_fails(Xx38,Xx39,Xx40)))).
fof(id27,axiom,! [Xx38,Xx39,Xx40] : (gcd_leq_terminates(Xx38,Xx39,Xx40) => (gcd_leq_succeeds(Xx38,Xx39,Xx40) | gcd_leq_fails(Xx38,Xx39,Xx40)))).
fof(id28,axiom,! [Xx41,Xx42,Xx43] : ~ ((gcd_succeeds(Xx41,Xx42,Xx43) & gcd_fails(Xx41,Xx42,Xx43)))).
fof(id29,axiom,! [Xx41,Xx42,Xx43] : (gcd_terminates(Xx41,Xx42,Xx43) => (gcd_succeeds(Xx41,Xx42,Xx43) | gcd_fails(Xx41,Xx42,Xx43)))).
fof(id30,axiom,! [Xx1] : (nat_list_succeeds(Xx1) <=> (? [Xx2] : ? [Xx3] : (Xx1 = cons(Xx2,Xx3) & (nat_succeeds(Xx2) & nat_list_succeeds(Xx3))) | Xx1 = nil))).
fof(id31,axiom,! [Xx1] : (nat_list_fails(Xx1) <=> (! [Xx2] : ! [Xx3] : (~ (Xx1 = cons(Xx2,Xx3)) | (nat_fails(Xx2) | nat_list_fails(Xx3))) & ~ (Xx1 = nil)))).
fof(id32,axiom,! [Xx1] : (nat_list_terminates(Xx1) <=> (! [Xx2] : ! [Xx3] : ($true & (~ (Xx1 = cons(Xx2,Xx3)) | (nat_terminates(Xx2) & (nat_fails(Xx2) | nat_list_terminates(Xx3))))) & $true))).
fof(id33,axiom,! [Xx1,Xx2,Xx3] : (times_succeeds(Xx1,Xx2,Xx3) <=> (? [Xx4] : ? [Xx5] : (Xx1 = s(Xx4) & (times_succeeds(Xx4,Xx2,Xx5) & plus_succeeds(Xx2,Xx5,Xx3))) | (Xx1 = '0' & Xx3 = '0')))).
fof(id34,axiom,! [Xx1,Xx2,Xx3] : (times_fails(Xx1,Xx2,Xx3) <=> (! [Xx4] : ! [Xx5] : (~ (Xx1 = s(Xx4)) | (times_fails(Xx4,Xx2,Xx5) | plus_fails(Xx2,Xx5,Xx3))) & (~ (Xx1 = '0') | ~ (Xx3 = '0'))))).
fof(id35,axiom,! [Xx1,Xx2,Xx3] : (times_terminates(Xx1,Xx2,Xx3) <=> (! [Xx4] : ! [Xx5] : ($true & (~ (Xx1 = s(Xx4)) | (times_terminates(Xx4,Xx2,Xx5) & (times_fails(Xx4,Xx2,Xx5) | plus_terminates(Xx2,Xx5,Xx3))))) & ($true & (~ (Xx1 = '0') | $true))))).
fof(id36,axiom,! [Xx1,Xx2,Xx3] : (plus_succeeds(Xx1,Xx2,Xx3) <=> (? [Xx4] : ? [Xx5] : (Xx1 = s(Xx4) & (Xx3 = s(Xx5) & plus_succeeds(Xx4,Xx2,Xx5))) | (Xx1 = '0' & Xx3 = Xx2)))).
fof(id37,axiom,! [Xx1,Xx2,Xx3] : (plus_fails(Xx1,Xx2,Xx3) <=> (! [Xx4] : ! [Xx5] : (~ (Xx1 = s(Xx4)) | (~ (Xx3 = s(Xx5)) | plus_fails(Xx4,Xx2,Xx5))) & (~ (Xx1 = '0') | ~ (Xx3 = Xx2))))).
fof(id38,axiom,! [Xx1,Xx2,Xx3] : (plus_terminates(Xx1,Xx2,Xx3) <=> (! [Xx4] : ! [Xx5] : ($true & (~ (Xx1 = s(Xx4)) | ($true & (~ (Xx3 = s(Xx5)) | plus_terminates(Xx4,Xx2,Xx5))))) & ($true & (~ (Xx1 = '0') | $true))))).
fof(id39,axiom,! [Xx1,Xx2] : ('@=<_succeeds'(Xx1,Xx2) <=> (? [Xx3] : ? [Xx4] : (Xx1 = s(Xx3) & (Xx2 = s(Xx4) & '@=<_succeeds'(Xx3,Xx4))) | Xx1 = '0'))).
fof(id40,axiom,! [Xx1,Xx2] : ('@=<_fails'(Xx1,Xx2) <=> (! [Xx3] : ! [Xx4] : (~ (Xx1 = s(Xx3)) | (~ (Xx2 = s(Xx4)) | '@=<_fails'(Xx3,Xx4))) & ~ (Xx1 = '0')))).
fof(id41,axiom,! [Xx1,Xx2] : ('@=<_terminates'(Xx1,Xx2) <=> (! [Xx3] : ! [Xx4] : ($true & (~ (Xx1 = s(Xx3)) | ($true & (~ (Xx2 = s(Xx4)) | '@=<_terminates'(Xx3,Xx4))))) & $true))).
fof(id42,axiom,! [Xx1,Xx2] : ('@<_succeeds'(Xx1,Xx2) <=> (? [Xx3] : ? [Xx4] : (Xx1 = s(Xx3) & (Xx2 = s(Xx4) & '@<_succeeds'(Xx3,Xx4))) | ? [Xx5] : (Xx1 = '0' & Xx2 = s(Xx5))))).
fof(id43,axiom,! [Xx1,Xx2] : ('@<_fails'(Xx1,Xx2) <=> (! [Xx3] : ! [Xx4] : (~ (Xx1 = s(Xx3)) | (~ (Xx2 = s(Xx4)) | '@<_fails'(Xx3,Xx4))) & ! [Xx5] : (~ (Xx1 = '0') | ~ (Xx2 = s(Xx5)))))).
fof(id44,axiom,! [Xx1,Xx2] : ('@<_terminates'(Xx1,Xx2) <=> (! [Xx3] : ! [Xx4] : ($true & (~ (Xx1 = s(Xx3)) | ($true & (~ (Xx2 = s(Xx4)) | '@<_terminates'(Xx3,Xx4))))) & ! [Xx5] : ($true & (~ (Xx1 = '0') | $true))))).
fof(id45,axiom,! [Xx1] : (nat_succeeds(Xx1) <=> (? [Xx2] : (Xx1 = s(Xx2) & nat_succeeds(Xx2)) | Xx1 = '0'))).
fof(id46,axiom,! [Xx1] : (nat_fails(Xx1) <=> (! [Xx2] : (~ (Xx1 = s(Xx2)) | nat_fails(Xx2)) & ~ (Xx1 = '0')))).
fof(id47,axiom,! [Xx1] : (nat_terminates(Xx1) <=> (! [Xx2] : ($true & (~ (Xx1 = s(Xx2)) | nat_terminates(Xx2))) & $true))).
fof(id48,axiom,! [Xx1,Xx2,Xx3] : (gcd_leq_succeeds(Xx1,Xx2,Xx3) <=> (? [Xx4] : ? [Xx5] : (Xx1 = s(Xx4) & (plus_succeeds(s(Xx4),Xx5,Xx2) & gcd_succeeds(s(Xx4),Xx5,Xx3))) | (Xx1 = '0' & Xx3 = Xx2)))).
fof(id49,axiom,! [Xx1,Xx2,Xx3] : (gcd_leq_fails(Xx1,Xx2,Xx3) <=> (! [Xx4] : ! [Xx5] : (~ (Xx1 = s(Xx4)) | (plus_fails(s(Xx4),Xx5,Xx2) | gcd_fails(s(Xx4),Xx5,Xx3))) & (~ (Xx1 = '0') | ~ (Xx3 = Xx2))))).
fof(id50,axiom,! [Xx1,Xx2,Xx3] : (gcd_leq_terminates(Xx1,Xx2,Xx3) <=> (! [Xx4] : ! [Xx5] : ($true & (~ (Xx1 = s(Xx4)) | (plus_terminates(s(Xx4),Xx5,Xx2) & (plus_fails(s(Xx4),Xx5,Xx2) | gcd_terminates(s(Xx4),Xx5,Xx3))))) & ($true & (~ (Xx1 = '0') | $true))))).
fof(id51,axiom,! [Xx1,Xx2,Xx3] : (gcd_succeeds(Xx1,Xx2,Xx3) <=> (('@<_succeeds'(Xx2,Xx1) & gcd_leq_succeeds(Xx2,Xx1,Xx3)) | ('@=<_succeeds'(Xx1,Xx2) & gcd_leq_succeeds(Xx1,Xx2,Xx3))))).
fof(id52,axiom,! [Xx1,Xx2,Xx3] : (gcd_fails(Xx1,Xx2,Xx3) <=> (('@<_fails'(Xx2,Xx1) | gcd_leq_fails(Xx2,Xx1,Xx3)) & ('@=<_fails'(Xx1,Xx2) | gcd_leq_fails(Xx1,Xx2,Xx3))))).
fof(id53,axiom,! [Xx1,Xx2,Xx3] : (gcd_terminates(Xx1,Xx2,Xx3) <=> (('@<_terminates'(Xx2,Xx1) & ('@<_fails'(Xx2,Xx1) | gcd_leq_terminates(Xx2,Xx1,Xx3))) & ('@=<_terminates'(Xx1,Xx2) & ('@=<_fails'(Xx1,Xx2) | gcd_leq_terminates(Xx1,Xx2,Xx3)))))).
fof('axiom-(leq:antisymmetric)',axiom,! [Xx,Xy] : (('@=<_succeeds'(Xx,Xy) & '@=<_succeeds'(Xy,Xx)) => Xx = Xy)).
fof('axiom-(leq:failure)',axiom,! [Xx,Xy] : (((nat_succeeds(Xx) & nat_succeeds(Xy)) & '@=<_fails'(Xx,Xy)) => '@=<_succeeds'(Xy,Xx))).
fof('axiom-(leq:less)',axiom,! [Xx,Xy] : (('@=<_succeeds'(Xx,Xy) & nat_succeeds(Xy)) => ('@<_succeeds'(Xx,Xy) | Xx = Xy))).
fof('axiom-(leq:less:transitive)',axiom,! [Xx,Xy,Xz] : (('@=<_succeeds'(Xx,Xy) & '@<_succeeds'(Xy,Xz)) => '@<_succeeds'(Xx,Xz))).
fof('axiom-(leq:one:failure)',axiom,! [Xx] : (nat_succeeds(Xx) => '@=<_fails'(s(Xx),Xx))).
fof('axiom-(leq:one:success)',axiom,! [Xx] : (nat_succeeds(Xx) => '@=<_succeeds'(Xx,s(Xx)))).
fof('axiom-(leq:plus)',axiom,! [Xx,Xy] : ('@=<_succeeds'(Xx,Xy) => ? [Xz] : '@+'(Xx,Xz) = Xy)).
fof('axiom-(leq:plus)',axiom,! [Xx,Xy] : ('@=<_succeeds'(Xx,Xy) => ? [Xz] : plus_succeeds(Xx,Xz,Xy))).
fof('axiom-(leq:plus:first)',axiom,! [Xx,Xy,Xz] : ((('@=<_succeeds'(Xx,Xy) & nat_succeeds(Xy)) & nat_succeeds(Xz)) => '@=<_succeeds'('@+'(Xx,Xz),'@+'(Xy,Xz)))).
fof('axiom-(leq:plus:first)',axiom,! [Xx,Xy] : (nat_succeeds(Xx) => '@=<_succeeds'(Xx,'@+'(Xx,Xy)))).
fof('axiom-(leq:plus:inverse)',axiom,! [Xx,Xy,Xz] : ((nat_succeeds(Xx) & '@=<_succeeds'('@+'(Xx,Xy),'@+'(Xx,Xz))) => '@=<_succeeds'(Xy,Xz))).
fof('axiom-(leq:plus:second)',axiom,! [Xx,Xy,Xz] : ((nat_succeeds(Xx) & '@=<_succeeds'(Xy,Xz)) => '@=<_succeeds'('@+'(Xx,Xy),'@+'(Xx,Xz)))).
fof('axiom-(leq:plus:second)',axiom,! [Xx,Xy] : ((nat_succeeds(Xx) & nat_succeeds(Xy)) => '@=<_succeeds'(Xy,'@+'(Xx,Xy)))).
fof('axiom-(leq:reflexive)',axiom,! [Xx] : (nat_succeeds(Xx) => '@=<_succeeds'(Xx,Xx))).
fof('axiom-(leq:termination:1)',axiom,! [Xx,Xy] : (nat_succeeds(Xx) => '@=<_terminates'(Xx,Xy))).
fof('axiom-(leq:termination:2)',axiom,! [Xx,Xy] : (nat_succeeds(Xy) => '@=<_terminates'(Xx,Xy))).
fof('axiom-(leq:times:inverse)',axiom,! [Xx,Xy,Xz] : ((((nat_succeeds(Xx) & nat_succeeds(Xy)) & nat_succeeds(Xz)) & '@=<_succeeds'('@*'(s(Xx),Xy),'@*'(s(Xx),Xz))) => '@=<_succeeds'(Xy,Xz))).
fof('axiom-(leq:totality)',axiom,! [Xx,Xy] : ((nat_succeeds(Xx) & nat_succeeds(Xy)) => ('@=<_succeeds'(Xx,Xy) | '@=<_succeeds'(Xy,Xx)))).
fof('axiom-(leq:transitive)',axiom,! [Xx,Xy,Xz] : (('@=<_succeeds'(Xx,Xy) & '@=<_succeeds'(Xy,Xz)) => '@=<_succeeds'(Xx,Xz))).
fof('axiom-(leq:types)',axiom,! [Xx,Xy] : ('@=<_succeeds'(Xx,Xy) => nat_succeeds(Xx))).
fof('axiom-(less:axiom:successor)',axiom,! [Xx,Xy] : ((nat_succeeds(Xy) & '@<_succeeds'(Xx,s(Xy))) => ('@<_succeeds'(Xx,Xy) | Xx = Xy))).
fof('axiom-(less:different:zero)',axiom,! [Xx] : ((nat_succeeds(Xx) & ~ (Xx = '0')) => '@<_succeeds'('0',Xx))).
fof('axiom-(less:failure)',axiom,! [Xx] : (nat_succeeds(Xx) => '@<_fails'(Xx,Xx))).
fof('axiom-(less:leq)',axiom,! [Xx,Xy] : ('@<_succeeds'(Xx,Xy) => '@=<_succeeds'(Xx,Xy))).
fof('axiom-(less:leq:total)',axiom,! [Xx,Xy] : ((nat_succeeds(Xx) & nat_succeeds(Xy)) => ('@<_succeeds'(Xx,Xy) | '@=<_succeeds'(Xy,Xx)))).
fof('axiom-(less:leq:transitive)',axiom,! [Xx,Xy,Xz] : (('@<_succeeds'(Xx,Xy) & '@=<_succeeds'(Xy,Xz)) => '@<_succeeds'(Xx,Xz))).
fof('axiom-(less:one)',axiom,! [Xx] : (nat_succeeds(Xx) => '@<_succeeds'(Xx,s(Xx)))).
fof('axiom-(less:plus)',axiom,! [Xx,Xy] : ('@<_succeeds'(Xx,Xy) => ? [Xz] : '@+'(Xx,s(Xz)) = Xy)).
fof('axiom-(less:plus)',axiom,! [Xx,Xy] : ('@<_succeeds'(Xx,Xy) => ? [Xz] : plus_succeeds(Xx,s(Xz),Xy))).
fof('axiom-(less:plus:first)',axiom,! [Xx,Xy,Xz] : ((('@<_succeeds'(Xx,Xy) & nat_succeeds(Xy)) & nat_succeeds(Xz)) => '@<_succeeds'('@+'(Xx,Xz),'@+'(Xy,Xz)))).
fof('axiom-(less:plus:first)',axiom,! [Xx,Xy] : ((('@<_succeeds'('0',Xy) & nat_succeeds(Xx)) & nat_succeeds(Xy)) => '@<_succeeds'(Xx,'@+'(Xy,Xx)))).
fof('axiom-(less:plus:inverse)',axiom,! [Xx,Xy,Xz] : ((((nat_succeeds(Xx) & nat_succeeds(Xy)) & nat_succeeds(Xz)) & '@<_succeeds'('@+'(Xx,Xz),'@+'(Xy,Xz))) => '@<_succeeds'(Xx,Xy))).
fof('axiom-(less:plus:inverse)',axiom,! [Xx,Xy,Xz] : ((nat_succeeds(Xx) & '@<_succeeds'('@+'(Xx,Xy),'@+'(Xx,Xz))) => '@<_succeeds'(Xy,Xz))).
fof('axiom-(less:plus:second)',axiom,! [Xx,Xy,Xz] : ((nat_succeeds(Xx) & '@<_succeeds'(Xy,Xz)) => '@<_succeeds'('@+'(Xx,Xy),'@+'(Xx,Xz)))).
fof('axiom-(less:plus:second)',axiom,! [Xx,Xy] : (nat_succeeds(Xx) => '@<_succeeds'(Xx,'@+'(Xx,s(Xy))))).
fof('axiom-(less:strictness)',axiom,! [Xx] : (nat_succeeds(Xx) => ~ ('@<_succeeds'(Xx,Xx)))).
fof('axiom-(less:successor)',axiom,! [Xx,Xy] : ('@<_succeeds'(Xx,Xy) => ? [Xz] : Xy = s(Xz))).
fof('axiom-(less:termination:1)',axiom,! [Xx,Xy] : (nat_succeeds(Xx) => '@<_terminates'(Xx,Xy))).
fof('axiom-(less:termination:2)',axiom,! [Xx,Xy] : (nat_succeeds(Xy) => '@<_terminates'(Xx,Xy))).
fof('axiom-(less:totality)',axiom,! [Xx,Xy] : ((nat_succeeds(Xx) & nat_succeeds(Xy)) => (('@<_succeeds'(Xx,Xy) | Xx = Xy) | '@<_succeeds'(Xy,Xx)))).
fof('axiom-(less:transitive)',axiom,! [Xx,Xy,Xz] : (('@<_succeeds'(Xx,Xy) & '@<_succeeds'(Xy,Xz)) => '@<_succeeds'(Xx,Xz))).
fof('axiom-(less:transitive:successor)',axiom,! [Xx,Xy,Xz] : (('@<_succeeds'(Xx,Xy) & '@<_succeeds'(Xy,s(Xz))) => '@<_succeeds'(Xx,Xz))).
fof('axiom-(less:types)',axiom,! [Xx,Xy] : ('@<_succeeds'(Xx,Xy) => nat_succeeds(Xx))).
fof('axiom-(less:weakening)',axiom,! [Xx,Xy] : ('@<_succeeds'(Xx,Xy) => '@<_succeeds'(Xx,s(Xy)))).
fof('axiom-(nat:ground)',axiom,! [Xx] : (nat_succeeds(Xx) => gr(Xx))).
fof('axiom-(nat:termination)',axiom,! [Xx] : (nat_succeeds(Xx) => nat_terminates(Xx))).
fof('axiom-(plus:associative)',axiom,! [Xx,Xy,Xz] : (((nat_succeeds(Xx) & nat_succeeds(Xy)) & nat_succeeds(Xz)) => '@+'('@+'(Xx,Xy),Xz) = '@+'(Xx,'@+'(Xy,Xz)))).
fof('axiom-(plus:commutative)',axiom,! [Xx,Xy] : ((nat_succeeds(Xx) & nat_succeeds(Xy)) => '@+'(Xx,Xy) = '@+'(Xy,Xx))).
fof('axiom-(plus:existence)',axiom,! [Xx,Xy] : (nat_succeeds(Xx) => ? [Xz] : plus_succeeds(Xx,Xy,Xz))).
fof('axiom-(plus:ground:1)',axiom,! [Xx,Xy,Xz] : (plus_succeeds(Xx,Xy,Xz) => gr(Xx))).
fof('axiom-(plus:ground:2)',axiom,! [Xx,Xy,Xz] : ((plus_succeeds(Xx,Xy,Xz) & gr(Xy)) => gr(Xz))).
fof('axiom-(plus:ground:3)',axiom,! [Xx,Xy,Xz] : ((plus_succeeds(Xx,Xy,Xz) & gr(Xz)) => gr(Xy))).
fof('axiom-(plus:injective:first)',axiom,! [Xx1,Xx2,Xy] : ((((nat_succeeds(Xx1) & nat_succeeds(Xx2)) & nat_succeeds(Xy)) & '@+'(Xx1,Xy) = '@+'(Xx2,Xy)) => Xx1 = Xx2)).
fof('axiom-(plus:injective:second)',axiom,! [Xx,Xy,Xz] : ((nat_succeeds(Xx) & '@+'(Xx,Xy) = '@+'(Xx,Xz)) => Xy = Xz)).
fof('axiom-(plus:leq:leq)',axiom,! [Xx1,Xx2,Xy1,Xy2] : ((('@=<_succeeds'(Xx1,Xy1) & '@=<_succeeds'(Xx2,Xy2)) & nat_succeeds(Xy1)) => '@=<_succeeds'('@+'(Xx1,Xx2),'@+'(Xy1,Xy2)))).
fof('axiom-(plus:leq:less)',axiom,! [Xx1,Xx2,Xy1,Xy2] : ((('@=<_succeeds'(Xx1,Xy1) & '@<_succeeds'(Xx2,Xy2)) & nat_succeeds(Xy1)) => '@<_succeeds'('@+'(Xx1,Xx2),'@+'(Xy1,Xy2)))).
fof('axiom-(plus:less:leq)',axiom,! [Xx1,Xx2,Xy1,Xy2] : ((('@<_succeeds'(Xx1,Xy1) & '@=<_succeeds'(Xx2,Xy2)) & nat_succeeds(Xy1)) => '@<_succeeds'('@+'(Xx1,Xx2),'@+'(Xy1,Xy2)))).
fof('axiom-(plus:less:less)',axiom,! [Xx1,Xx2,Xy1,Xy2] : ((('@<_succeeds'(Xx1,Xy1) & '@<_succeeds'(Xx2,Xy2)) & nat_succeeds(Xy1)) => '@<_succeeds'('@+'(Xx1,Xx2),'@+'(Xy1,Xy2)))).
fof('axiom-(plus:successor)',axiom,! [Xx,Xy] : ((nat_succeeds(Xx) & nat_succeeds(Xy)) => '@+'(Xx,s(Xy)) = '@+'(s(Xx),Xy))).
fof('axiom-(plus:successor)',axiom,! [Xx,Xy] : (nat_succeeds(Xx) => '@+'(s(Xx),Xy) = s('@+'(Xx,Xy)))).
fof('axiom-(plus:termination:1)',axiom,! [Xx,Xy,Xz] : (nat_succeeds(Xx) => plus_terminates(Xx,Xy,Xz))).
fof('axiom-(plus:termination:2)',axiom,! [Xx,Xy,Xz] : (nat_succeeds(Xz) => plus_terminates(Xx,Xy,Xz))).
fof('axiom-(plus:termination:3)',axiom,! [Xx,Xy,Xz] : (plus_succeeds(Xx,Xy,Xz) => plus_terminates(Xx,Xy,Xz))).
fof('axiom-(plus:times:distributive)',axiom,! [Xx,Xy,Xz] : (((nat_succeeds(Xx) & nat_succeeds(Xy)) & nat_succeeds(Xz)) => '@*'(Xz,'@+'(Xx,Xy)) = '@+'('@*'(Xz,Xx),'@*'(Xz,Xy)))).
fof('axiom-(plus:times:distributive)',axiom,! [Xx,Xy,Xz] : (((nat_succeeds(Xx) & nat_succeeds(Xy)) & nat_succeeds(Xz)) => '@*'('@+'(Xx,Xy),Xz) = '@+'('@*'(Xx,Xz),'@*'(Xy,Xz)))).
fof('axiom-(plus:types)',axiom,! [Xx,Xy] : ((nat_succeeds(Xx) & nat_succeeds(Xy)) => nat_succeeds('@+'(Xx,Xy)))).
fof('axiom-(plus:types:1)',axiom,! [Xx,Xy,Xz] : (plus_succeeds(Xx,Xy,Xz) => nat_succeeds(Xx))).
fof('axiom-(plus:types:2)',axiom,! [Xx,Xy,Xz] : ((plus_succeeds(Xx,Xy,Xz) & nat_succeeds(Xy)) => nat_succeeds(Xz))).
fof('axiom-(plus:types:3)',axiom,! [Xx,Xy,Xz] : ((plus_succeeds(Xx,Xy,Xz) & nat_succeeds(Xz)) => nat_succeeds(Xy))).
fof('axiom-(plus:uniqueness)',axiom,! [Xx,Xy,Xz1,Xz2] : ((plus_succeeds(Xx,Xy,Xz1) & plus_succeeds(Xx,Xy,Xz2)) => Xz1 = Xz2)).
fof('axiom-(plus:zero)',axiom,! [Xx] : (nat_succeeds(Xx) => '@+'(Xx,'0') = Xx)).
fof('axiom-(plus:zero)',axiom,! [Xy] : '@+'('0',Xy) = Xy).
fof('axiom-(times:associative)',axiom,! [Xx,Xy,Xz] : (((nat_succeeds(Xx) & nat_succeeds(Xy)) & nat_succeeds(Xz)) => '@*'('@*'(Xx,Xy),Xz) = '@*'(Xx,'@*'(Xy,Xz)))).
fof('axiom-(times:commutative)',axiom,! [Xx,Xy] : ((nat_succeeds(Xx) & nat_succeeds(Xy)) => '@*'(Xx,Xy) = '@*'(Xy,Xx))).
fof('axiom-(times:existence)',axiom,! [Xx,Xy] : ((nat_succeeds(Xx) & nat_succeeds(Xy)) => ? [Xz] : times_succeeds(Xx,Xy,Xz))).
fof('axiom-(times:ground:1)',axiom,! [Xx,Xy,Xz] : (times_succeeds(Xx,Xy,Xz) => gr(Xx))).
fof('axiom-(times:ground:2)',axiom,! [Xx,Xy,Xz] : ((times_succeeds(Xx,Xy,Xz) & gr(Xy)) => gr(Xz))).
fof('axiom-(times:leq:first)',axiom,! [Xx,Xy,Xz] : ((('@=<_succeeds'(Xx,Xy) & nat_succeeds(Xy)) & nat_succeeds(Xz)) => '@=<_succeeds'('@*'(Xx,Xz),'@*'(Xy,Xz)))).
fof('axiom-(times:leq:second)',axiom,! [Xx,Xy,Xz] : (((nat_succeeds(Xx) & '@=<_succeeds'(Xy,Xz)) & nat_succeeds(Xz)) => '@=<_succeeds'('@*'(Xx,Xy),'@*'(Xx,Xz)))).
fof('axiom-(times:less:second)',axiom,! [Xx,Xy,Xz] : ((((nat_succeeds(Xx) & ~ (Xx = '0')) & '@<_succeeds'(Xy,Xz)) & nat_succeeds(Xz)) => '@<_succeeds'('@*'(Xx,Xy),'@*'(Xx,Xz)))).
fof('axiom-(times:one)',axiom,! [Xx] : (nat_succeeds(Xx) => '@*'(Xx,s('0')) = Xx)).
fof('axiom-(times:one)',axiom,! [Xx] : (nat_succeeds(Xx) => '@*'(s('0'),Xx) = Xx)).
fof('axiom-(times:successor)',axiom,! [Xx,Xy] : ((nat_succeeds(Xx) & nat_succeeds(Xy)) => '@*'(s(Xx),Xy) = '@+'(Xy,'@*'(Xx,Xy)))).
fof('axiom-(times:successor)',axiom,! [Xy,Xx] : ((nat_succeeds(Xy) & nat_succeeds(Xx)) => '@+'('@*'(Xy,Xx),Xy) = '@*'(Xy,s(Xx)))).
fof('axiom-(times:termination)',axiom,! [Xx,Xy,Xz] : ((nat_succeeds(Xx) & nat_succeeds(Xy)) => times_terminates(Xx,Xy,Xz))).
fof('axiom-(times:types)',axiom,! [Xx,Xy] : ((nat_succeeds(Xx) & nat_succeeds(Xy)) => nat_succeeds('@*'(Xx,Xy)))).
fof('axiom-(times:types:1)',axiom,! [Xx,Xy,Xz] : (times_succeeds(Xx,Xy,Xz) => nat_succeeds(Xx))).
fof('axiom-(times:types:2)',axiom,! [Xx,Xy,Xz] : ((times_succeeds(Xx,Xy,Xz) & nat_succeeds(Xy)) => nat_succeeds(Xz))).
fof('axiom-(times:uniqueness)',axiom,! [Xx,Xy,Xz1,Xz2] : ((times_succeeds(Xx,Xy,Xz1) & times_succeeds(Xx,Xy,Xz2)) => Xz1 = Xz2)).
fof('axiom-(times:zero)',axiom,! [Xx] : (nat_succeeds(Xx) => '@*'(Xx,'0') = '0')).
fof('axiom-(times:zero)',axiom,! [Xy] : (nat_succeeds(Xy) => '@*'('0',Xy) = '0')).
fof('(@*)/2',axiom,! [Xx,Xy,Xz] : ((nat_succeeds(Xx) & nat_succeeds(Xy)) => ('@*'(Xx,Xy) = Xz <=> times_succeeds(Xx,Xy,Xz)))).
fof('(@+)/2',axiom,! [Xx,Xy,Xz] : (nat_succeeds(Xx) => ('@+'(Xx,Xy) = Xz <=> plus_succeeds(Xx,Xy,Xz)))).
fof('(div)/2',axiom,! [Xx,Xy] : (div(Xx,Xy) <=> ? [Xz] : (nat_succeeds(Xz) & '@*'(Xx,Xz) = Xy))).
fof('lemma-((div):plus)',axiom,! [Xx,Xy,Xz,Xd] : (((((nat_succeeds(Xy) & nat_succeeds(Xd)) & plus_succeeds(Xx,Xy,Xz)) & div(Xd,Xx)) & div(Xd,Xy)) => div(Xd,Xz))).
fof('lemma-((div):minus)',axiom,! [Xx,Xy,Xz,Xd] : (((((nat_succeeds(Xz) & nat_succeeds(Xd)) & plus_succeeds(Xx,Xy,Xz)) & div(Xd,Xx)) & div(Xd,Xz)) => div(Xd,Xy))).
fof('lemma-(gcd:types)',axiom,(! [Xx,Xy,Xd] : (gcd_succeeds(Xx,Xy,Xd) => ((nat_succeeds(Xx) & nat_succeeds(Xy)) => nat_succeeds(Xd))) & ! [Xx,Xy,Xd] : (gcd_leq_succeeds(Xx,Xy,Xd) => ((nat_succeeds(Xx) & nat_succeeds(Xy)) => nat_succeeds(Xd))))).
fof('corollary-(gcd:types)',axiom,! [Xx,Xy,Xd] : (((nat_succeeds(Xx) & nat_succeeds(Xy)) & gcd_succeeds(Xx,Xy,Xd)) => nat_succeeds(Xd))).
fof('corollary-(gcd_leq:types)',axiom,! [Xx,Xy,Xd] : (((nat_succeeds(Xx) & nat_succeeds(Xy)) & gcd_leq_succeeds(Xx,Xy,Xd)) => nat_succeeds(Xd))).
fof('lemma-(gcd:(div))',axiom,(! [Xx,Xy,Xd] : (gcd_succeeds(Xx,Xy,Xd) => ((nat_succeeds(Xx) & nat_succeeds(Xy)) => (div(Xd,Xx) & div(Xd,Xy)))) & ! [Xx,Xy,Xd] : (gcd_leq_succeeds(Xx,Xy,Xd) => ((nat_succeeds(Xx) & nat_succeeds(Xy)) => (div(Xd,Xx) & div(Xd,Xy)))))).
fof('theorem-(gcd:(div))',axiom,! [Xx,Xy,Xd] : (((nat_succeeds(Xx) & nat_succeeds(Xy)) & gcd_succeeds(Xx,Xy,Xd)) => (div(Xd,Xx) & div(Xd,Xy)))).
fof('lemma-(gcd:complete)',axiom,(! [Xx,Xy,Xd] : (gcd_succeeds(Xx,Xy,Xd) => ! [Xe] : (((((nat_succeeds(Xx) & nat_succeeds(Xy)) & nat_succeeds(Xe)) & div(Xe,Xx)) & div(Xe,Xy)) => div(Xe,Xd))) & ! [Xx,Xy,Xd] : (gcd_leq_succeeds(Xx,Xy,Xd) => ! [Xe] : (((((nat_succeeds(Xx) & nat_succeeds(Xy)) & nat_succeeds(Xe)) & div(Xe,Xx)) & div(Xe,Xy)) => div(Xe,Xd))))).
fof('theorem-(gcd:complete)',axiom,! [Xx,Xy,Xd,Xe] : ((((((gcd_succeeds(Xx,Xy,Xd) & nat_succeeds(Xx)) & nat_succeeds(Xy)) & nat_succeeds(Xe)) & div(Xe,Xx)) & div(Xe,Xy)) => div(Xe,Xd))).
fof('lemma-(gcd:termination)',axiom,! [Xn] : (nat_succeeds(Xn) => (! [Xx,Xy,Xd] : ((((nat_succeeds(Xx) & nat_succeeds(Xy)) & '@<_succeeds'('@+'(Xx,Xy),Xn)) & '@=<_succeeds'(Xx,Xy)) => gcd_leq_terminates(Xx,Xy,Xd)) & ! [Xx,Xy,Xd] : (((nat_succeeds(Xx) & nat_succeeds(Xy)) & '@<_succeeds'('@+'(Xx,Xy),Xn)) => gcd_terminates(Xx,Xy,Xd))))).
fof(induction,axiom,(! [Xx] : ((? [Xx2] : (Xx = s(Xx2) & (nat_succeeds(Xx2) & ! [Xy,Xd] : (nat_succeeds(Xy) => gcd_terminates(Xx2,Xy,Xd)))) | Xx = '0') => ! [Xy,Xd] : (nat_succeeds(Xy) => gcd_terminates(Xx,Xy,Xd))) => ! [Xx] : (nat_succeeds(Xx) => ! [Xy,Xd] : (nat_succeeds(Xy) => gcd_terminates(Xx,Xy,Xd))))).
fof('theorem-(gcd:termination)',conjecture,! [Xx,Xy,Xd] : ((nat_succeeds(Xx) & nat_succeeds(Xy)) => gcd_terminates(Xx,Xy,Xd))).
